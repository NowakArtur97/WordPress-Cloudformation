AWSTemplateFormatVersion: 2010-09-09
Description: Wordpress Template
Parameters:
  InstanceType:
    Type: String
    Description: EC2 instances size
    Default: t2.micro
  ImageId:
    Type: String
    Description: EC2 instances image id
    Default: ami-00b8917ae86a424c9
  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an EC2 KeyPair to enable SSH access to the instance
    Default: wordpress
  SshPort:
    Type: Number
    Description: SSH port
    Default: 22
    MinValue: 22
    MaxValue: 65535
  SourceCidr:
    Type: String
    Description: CIDR Block of IPv4 IP addresses allowed to access EC2 instances via SSH
    AllowedPattern: "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(/([0-9]|[1-2][0-9]|3[0-2]))?$"
    ConstraintDescription: The value must be valid IPv4 CIDR block.
    Default: 0.0.0.0/32
Resources:
  ############################ VPC ############################
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.16.0.0/24
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: wordpress-vpc
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: wordpress-igw
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  WordpressRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: wordpress-rt-app
  WordpressRouteTableDefaultIPv4:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId:
        Ref: WordpressRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
  WordpressRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref WordpressSubnet
      RouteTableId:
        Ref: WordpressRouteTable
  WordpressSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: 10.16.0.0/27
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: wordpress-sn-app
  WordpressSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: A Security Group for Wordpress VPC
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1
        - CidrIp: 0.0.0.0/0
          FromPort: 8080
          ToPort: 8080
          IpProtocol: tcp
        - CidrIp: !Ref SourceCidr
          FromPort: 22
          ToPort: 22
          IpProtocol: tcp
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1
  WordpressEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      SubnetId: !Ref WordpressSubnet
      SecurityGroupIds:
        - !Ref WordpressSecurityGroup
      KeyName: !Ref KeyPairName
      Tags:
        - Key: Name
          Value: wordpress-ec2
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum install -y httpd
          service httpd start
Outputs:
  WordpressIP:
    Description: Wordpress EC2 instance public IP
    Value: !GetAtt WordpressEC2Instance.PublicIp
